 
#####################################################################
# 	Includes
#####################################################################
#[include macros.cfg]
#[include homing.cfg]
#[include probing.cfg]
[include z_calibration.cfg]

[include client_macros.cfg]
[include filament_dryer.cfg]
[include nozzle_scrub.cfg]
[include fans.cfg]
[include client.cfg]
[include PA_calibration.cfg]
[include bed_mesh.cfg]
[include klicky-probe.cfg]

[exclude_object]
# This file contains common pin mappings for the Fysetc Spider board.
# To use this config, the firmware should be compiled for the STM32F446.
# When calling "menuconfig", enable "extra low-level configuration setup"
# and select the "12MHz crystal" as clock reference
# For flashing, write the compiled klipper.bin to memory location 0x08000000

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm Spider TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Fine tune E steps					[extruder] section

[mcu]
##  You need to select 'Communication interface' to USB in 'make menuconfig'
##  when you compile Klipper for Spider
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1D0009001050563046363120-if00
##	If you want to use the Raspberry uart0 to communicate with Spider, 
##  you need to select 'Communication interface' to 'Serial (on USART1 PA10/PA9)' 
##  in 'make menuconfig' when you compile klipper and set the serial as below
##--------------------------------------------------------------------
#serial: /dev/ttyAMA0
##--------------------------------------------------------------------

## Uncomment below if you're using the Raspberry uart0 to communicate with Spider
#restart_method: command

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 5000			        #Max 4000
max_z_velocity: 30			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".


#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X-MOT (B Motor)
step_pin: PE11
dir_pin: PE10   #!PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^PB14
position_min: 0

##--------------------------------------------------------------------

##	Uncomment below for 250mm build
position_endstop: 250
position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 40   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PE7
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: PB12   #!PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^PB13
position_min: 0
##--------------------------------------------------------------------

##	Uncomment for 250mm build
position_endstop: 255   # WARNING ! Change homing_override for homing at the same Y position
position_max: 255

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 40  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE15
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## In Z-MOT Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PD14
dir_pin: PD13  #!PD13
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
##  In Z- Position
endstop_pin: ^PA0
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 0.759
position_endstop: 0.8
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
position_max: 230

##	Uncomment below for 300mm build
#position_max: 290

##	Uncomment below for 350mm build
#position_max: 340

##--------------------------------------------------------------------
position_min: -7
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 3


##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PD10
uart_address: 0
interpolate: True
run_current: 0.8
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 9999

##	In E1-MOT Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE6
dir_pin: !PC13  #PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: True
run_current: 0.8
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 9999

##	In E2-MOT Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PE2
dir_pin: PE4    #!PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: true
run_current: 0.8
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 9999

##	In E4-MOT Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PE1 #PD12
dir_pin: !PE0 #!PC4   #PC4
enable_pin: !PC5 #!PE8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PD11 #PA15
interpolate: true
run_current: 0.8
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 9999

#####################################################################
#   Sensors and Thermistor definitions
#####################################################################
[thermistor Trianglelab NTC100K B3950]
## values calibrated against a PT100 reference, better curve than default NTC100K from Klipper which is less accurate
temperature1: 25.0
resistance1: 103180.0
temperature2: 150.0
resistance2: 1366.2
temperature3: 250.0
resistance3: 168.6

[temperature_sensor Chamber]
sensor_type: Generic 3950
sensor_pin: PC2
min_temp: 10
max_temp: 70


#[temperature_sensor raspberry_pi]
#sensor_type: temperature_host
#min_temp: 10
#max_temp: 100

#[temperature_sensor mcu_temp]
#sensor_type: temperature_mcu
#min_temp: 0
#max_temp: 100


#####################################################################
#   Extruder
#####################################################################
#	In E0-MOT Position
[extruder]
step_pin: PD5
dir_pin: PD6
enable_pin: !PD4

#	Update value below when you perform extruder calibration
#	If you ask for 100mm of filament, but in reality it is 98mm:
#	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
#  22.6789511 is a good starting point
rotation_distance: 22.0648155344526 #21.7601731109 #21.4512747545 ===50.72 #21.8578304 #21.928 #22.3705173 #22.6789511	#Bondtech 5mm Drive Gears
#	Update Gear Ratio depending on your Extruder Type
#	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
#	Use 80:20 for M4, M3.1
gear_ratio: 50:17				#BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
#      In E0 OUT Position
heater_pin: PB15
#	Validate the following thermistor type to make sure it is correct
sensor_type: Trianglelab NTC100K B3950 #NTC 100K beta 3950    #EPCOS 100K B57560G104F   #ATC Semitec 104GT-2
sensor_pin: PC0
min_temp: -99
max_temp: 270
max_power: 1
min_extrude_temp: 170
#	Try to keep pressure_advance below 1.0
# Pressure advance is set in slicer to adapt each filament
#pressure_advance: 0.0621    #0.05014       #0.0576 #0.05416  #0.05
#	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
#control: pid
#pid_Kp=19.666 
#pid_Ki=1.016 
#pid_Kd=95.134



[verify_heater extruder]
max_error: 180
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
#check_gain_time:
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.






#	In E0-MOT Position
#	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PD7
interpolate: false
run_current: 0.5
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0



#####################################################################
#	Probe
#####################################################################
# INDUCTIVE PROBE
#[probe]
#	Inductive Probe - If you use this section , please comment the [bltouch] section
#	This probe is not used for Z height, only Quad Gantry Leveling
#	In Z+ position
#	If your probe is NO instead of NC, add change pin to ^PA3
#pin: PA3
#x_offset: 0
#y_offset: 25.0
#z_offset: 0
#speed: 10.0
#samples: 2
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3

#lift_speed:30

# KLICKY PROBE
[probe]
#	Inductive Probe - If you use this section , please comment the [bltouch] section
#	This probe is not used for Z height, only Quad Gantry Leveling
#	In Z+ position
#	If your probe is NO instead of NC, add change pin to ^PA3
pin: PA3

x_offset: 0
y_offset: 19.75
z_offset: 6.42
speed: 10
samples: 2
samples_result: median
sample_retract_dist: 5.0
samples_tolerance: 0.025
samples_tolerance_retries: 3

lift_speed:70 #formerly 30

#####################################################################
#	Bltouch
#####################################################################

#[bltouch]
##	Bltouch - If you use this section , please comment the [probe] section
##	More infomation at : https://www.klipper3d.org/BLTouch.html
##	This bltouch is not used for Z height, only Quad Gantry Leveling
##	In Z+ Position
#sensor_pin: PA3
##	In Y+ Position
#control_pin: PA2
#x_offset: 0
#y_offset: 25.0
#z_offset: 0
#speed: 10.0
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3



#####################################################################
#	LED Control
#####################################################################

[output_pin caselight ]
##  Chamber Lighting - In 5V-RGB Position
pin: PB5
pwm: true
#shutdown_value: 0
value: 1
cycle_time: 0.005

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800


# Used homing_override instead, to move toolhead AFTER homing on Z ENDSTOP
#[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:183,250
#speed:100
#z_hop:10

[homing_override]
axes: z                 # this setting is not working, override is always called no matter the axes
set_position_z : 0      # Define current position as Z=0 before homing
gcode:
    {% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}
    {% if probe_attached %}
        { action_raise_error("Please dock your probe first !") }
        M117 Please dock probe first!
    {% endif %}
    
    {% if printer.toolhead.position.y > 230 and printer.toolhead.position.x < 125 %}     # Avoid crashing into Klicky dock
         G0 Y210 X125 Z20
    {% endif %}

    {% if params.Z is defined and params.Y is not defined and params.X is not defined %}    # Home only Z if it's the only param, otherwise X and Y have to be homed too
        {% set homexy = false %}
    {% else %}
        {% set homexy = true %}
    {% endif %}

    {% if homexy is true %}     # Do we need to home X and Y first ?
        G28 X0 
        G28 Y0
    {% endif %}

        G0 Z10 F600             # Moves up nozzle to a safe position
        #G0 X183 Y255 F3000      # Position above the Z Endstop
        G0 X222 Y255 F3000      # Position above the Z Endstop
        G28 Z0                  # Home Z
        G0 Z20 F600      # moves away the nozzle to avoid smashing the Z endstop with z_endstop_calibrate or probe_calibrate
    {% if params.NOSAFE is not defined %}    
        #G0 X125 Y250 Z20 F3000      # moves away the nozzle to avoid smashing the Z endstop with z_endstop_calibrate or probe_calibrate
        #G0 X125 Z20 F3000      # moves away the nozzle to avoid smashing the Z endstop with z_endstop_calibrate or probe_calibrate
        G0 X250 Z20 F3000      # moves away the nozzle to avoid smashing the Z endstop with z_endstop_calibrate or probe_calibrate
    {% endif %}


   
[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
gantry_corners:
	-60,-10
	310, 320
##	Probe points
points:
	200,175
	200,25
	50,25
	50,175
	


#--------------------------------------------------------------------
speed: 300
#horizontal_move_z: 8
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10


#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
#	SSR Pin - In E2 OUT position
heater_pin: PB3
sensor_type: Trianglelab NTC100K B3950 #NTC 100K MGB18-104F39050L32
sensor_pin: PC1
#	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.75
min_temp: 0
max_temp: 120
control: pid
pid_Kp=41.370 
pid_Ki=2.013 
pid_Kd=212.538


[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 210,210
mesh_pps: 3,3


fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
adaptive_margin: 5
algorithm: bicubic
zero_reference_position: 125,125 #for use with stock z endstop

#####################################################################
#	Displays
#####################################################################

#--------------------------------------------------------------------

[display]
##	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel sb_led]
pin: PD3
chain_count: 3
color_order: GRBW
initial_RED: 0
initial_GREEN: 0
initial_BLUE: 0
initial_WHITE: 0

[delayed_gcode set_sb_led]
initial_duration: 1
gcode:
        # Logo color
        SET_LED LED=sb_led RED=0 GREEN=0 BLUE=0 WHITE=0.3 INDEX=1 #TRANSMIT=0
        # Nozzle right
        SET_LED LED=sb_led RED=0 GREEN=0 BLUE=0 WHITE=1 INDEX=2 #TRANSMIT=0
        # Nozzle left
        SET_LED LED=sb_led RED=0 GREEN=0 BLUE=0 WHITE=1 INDEX=3 

[neopixel fysetc_mini12864]
##	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
chain_count: 60
initial_RED: 1
initial_GREEN: 0
initial_BLUE: 0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 3
gcode:
        # Screen color
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
        # Button color 1
        SET_LED LED=fysetc_mini12864 RED=0.5 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        # Button color 2
        SET_LED LED=fysetc_mini12864 RED=0.5 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#==================== INPUT SHAPER / ADXL 345 =============================
[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    125,125,20  # an example

[input_shaper]
shaper_freq_x: 49.8
shaper_type_x: mzv
shaper_freq_y: 31.8
shaper_type_y: mzv


#####################################################################
#	Macros
#####################################################################
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}
    {% if probe_attached %}
        { action_raise_error("Please dock your probe first !") }
        M117 Please dock probe first!
    {% endif %}

    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    #G32                            ; home all axes
    G91 E0                          ; set relative coordinates
    G1 E-15.0 F3600                 ; retract filament
    G90                             ; set absolute coordinates
    G28                             ; home all axes
    clean_nozzle                    ; Call clean nozzle macro                             ; absolute coordinates
    #G28 Z0 NOSAFE                   ; Home Z with clean Nozzle
    QUAD_GANTRY_LEVEL               ; QGL without docking afterwards to let Adaptive bed mesh
    G28 Z0 NOSAFE                   ; rehome Z after QGL
    #G1 Y240                         ; Move Y to avoid taping the Z endstop at print start
    BED_MESH_CALIBRATE ADAPTIVE=1   ; integrated adaptive Mesh (deactivate Fryx ADAPTIVE_BED_MESH SIZE={FL_SIZE})
    CALIBRATE_Z
    G91 E0                          ; set relative coordinates
    G1 E20 F3600                    ; de-retract filament
    G90                             ; set absolute coordinates
    CASE_LIGHT_ON                   ; Turn on Case light
    UPDATE_DELAYED_GCODE ID=TIMER_CASE_LIGHT_OFF DURATION=180          ; Waits a few minutes before turning off case light


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X250 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    ;SET_FAN_SPEED FAN=exhaust_fan SPEED=1  ;is handled in slicer


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    PRINT_END
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT



[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME





#[gcode_macro NOZZLE_CLEAN]
#gcode:
#    {% if printer.toolhead.position.y > 230 and printer.toolhead.position.x > 125 %}     # Do we need to home X and Y first ?
#        G0 Y230 X90 Z20
#    {% endif %}
#    clean_nozzle



## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh 100DEG]
#*# version = 1
#*# points =
#*# 	0.010000, 0.001250, -0.020000, 0.012500, 0.031250
#*# 	0.008750, -0.017500, -0.031250, 0.016250, 0.015000
#*# 	0.013750, -0.013750, 0.000000, 0.036250, 0.038750
#*# 	0.050000, -0.007500, 0.003750, 0.006250, 0.033750
#*# 	0.028750, -0.001250, -0.001250, 0.007500, 0.038750
#*# tension = 0.2
#*# mesh_x_pps = 3
#*# algo = bicubic
#*# min_x = 40.0
#*# min_y = 40.0
#*# y_count = 5
#*# mesh_y_pps = 3
#*# x_count = 5
#*# max_x = 210.0
#*# max_y = 210.0
#*#
#*# [bed_mesh 60DEG]
#*# version = 1
#*# points =
#*# 	-0.042500, -0.025000, -0.028750, -0.023750, -0.026250
#*# 	-0.008750, -0.006250, -0.017500, 0.003750, 0.005000
#*# 	-0.007500, 0.012500, 0.000000, 0.010000, 0.015000
#*# 	-0.012500, 0.007500, -0.006250, -0.003750, -0.001250
#*# 	-0.028750, -0.016250, -0.032500, -0.026250, -0.030000
#*# tension = 0.2
#*# mesh_x_pps = 2
#*# algo = bicubic
#*# min_x = 40.0
#*# min_y = 40.0
#*# y_count = 5
#*# mesh_y_pps = 2
#*# x_count = 5
#*# max_x = 210.0
#*# max_y = 210.0
#*#
#*# [bed_mesh 50DEG]
#*# version = 1
#*# points =
#*# 	  -0.007500, -0.032500, -0.023750, -0.016250, 0.005000
#*# 	  -0.021250, -0.035000, -0.016250, -0.006250, -0.023750
#*# 	  -0.002500, -0.036250, 0.000000, -0.006250, 0.008750
#*# 	  0.000000, -0.023750, -0.020000, -0.006250, -0.016250
#*# 	  0.015000, -0.008750, -0.001250, -0.016250, -0.005000
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 3
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 210.0
#*# mesh_x_pps = 3
#*# max_x = 210.0
#*#
#*# [bed_mesh 70DEG]
#*# version = 1
#*# points =
#*# 	0.005000, 0.005000, -0.010000, 0.002500, 0.012500
#*# 	0.010000, 0.002500, -0.012500, 0.007500, 0.025000
#*# 	0.012500, 0.016250, 0.000000, 0.020000, 0.038750
#*# 	0.015000, 0.022500, 0.002500, 0.013750, 0.028750
#*# 	0.007500, 0.010000, -0.001250, 0.008750, 0.018750
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 210.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 30.218
#*# pid_ki = 1.638
#*# pid_kd = 139.379
